name: build

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-11, ubuntu-latest, windows-latest]

    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: full
      CARGO_TERM_COLOR: always

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: "1.59.0"

      - name: Log versions
        run: |
          rustc --version
          cargo --version
      - name: Configure cargo data directory
        run: |
          echo "CARGO_HOME=$(pwd)/.cargo_home" >> $GITHUB_ENV
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |-
            .cargo_home
            target/*/.*
            target/*/build
            target/*/deps
          key: ${{ matrix.config.os }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.config.os }}-

      - name: Build (linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          # for build aarch64-unknown-linux-musl
          sudo apt-get update
          # install linker
          sudo apt-get -y install gcc-x86-64-linux-gnu gcc-aarch64-linux-gnu gcc-mips-linux-gnu gcc-mips64-linux-gnuabi64 gcc-mips64el-linux-gnuabi64

          rustup target add x86_64-unknown-linux-musl

          cargo build --release --locked --target x86_64-unknown-linux-musl

          tar -cvzf target/x86_64-unknown-linux-musl/release/cask_linux_amd64.tar.gz --directory=target/x86_64-unknown-linux-musl/release cask

      - name: Build (mac)
        if: startsWith(matrix.os, 'macOS')
        run: |
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-apple-darwin
          cargo build --release --locked --target x86_64-apple-darwin
          cargo build --release --locked --target aarch64-apple-darwin
          tar -cvzf target/x86_64-apple-darwin/release/cask_darwin_amd64.tar.gz --directory=target/x86_64-apple-darwin/release cask
          tar -cvzf target/aarch64-apple-darwin/release/cask_darwin_arm64.tar.gz --directory=target/aarch64-apple-darwin/release cask

      - name: Build (windows)
        if: startsWith(matrix.os, 'windows')
        run: |
          rustup target add x86_64-pc-windows-msvc

          cargo build --release --locked --target x86_64-pc-windows-msvc

          tar -cvzf target/x86_64-pc-windows-msvc/release/cask_windows_amd64.tar.gz --directory=target/x86_64-pc-windows-msvc/release cask.exe

      - name: Release to Github
        uses: softprops/action-gh-release@v1
        if: startsWith(github.repository, 'axetroy') && startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          files: |
            target/x86_64-pc-windows-msvc/release/cask_windows_amd64.tar.gz

            target/x86_64-unknown-linux-musl/release/cask_linux_amd64.tar.gz

            target/x86_64-apple-darwin/release/cask_darwin_amd64.tar.gz
            target/aarch64-apple-darwin/release/cask_darwin_arm64.tar.gz
          draft: false
